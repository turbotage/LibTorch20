<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{ED15E65C-71B0-36C4-AF77-16DE6E5A9831}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <VcpkgEnabled>false</VcpkgEnabled>
    <WindowsTargetPlatformVersion>10.0.22621.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>TestTorch20</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 12.1.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="do_not_import_user.props" Condition="exists('do_not_import_user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\Documents\GitHub\LibTorch20\out\build\x64-release\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">TestTorch20.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">TestTorch20</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.dll</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\Documents\GitHub\LibTorch20\out\build\x64-release\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">TestTorch20.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">TestTorch20</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.dll</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</GenerateManifest>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalOptions>%(AdditionalOptions) /external:I "C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.8/include" /external:I "D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/include" /external:I "D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/include/torch/csrc/api/include" /external:I "C:/Program Files/NVIDIA Corporation/NvToolsExt//include" /bigobj</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ExceptionHandling>Sync</ExceptionHandling>
      <ExternalWarningLevel>TurnOffAllWarnings</ExternalWarningLevel>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;USE_DISTRIBUTED;USE_C10D_GLOO;CMAKE_INTDIR="Release";TestTorch20_EXPORTS</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;USE_DISTRIBUTED;USE_C10D_GLOO;CMAKE_INTDIR=\"Release\";TestTorch20_EXPORTS</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\include;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\include;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\include\torch\csrc\api\include;C:\Program Files\NVIDIA Corporation\NvToolsExt\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\include;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\include;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\include\torch\csrc\api\include;C:\Program Files\NVIDIA Corporation\NvToolsExt\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message>	</Message>
      <Command>setlocal
C:\Users\TurboTage\AppData\Local\Microsoft\WindowsApps\pwsh.exe -noprofile -executionpolicy Bypass -file D:/Documents/GitHub/vcpkg/scripts/buildsystems/msbuild/applocal.ps1 -targetBinary D:/Documents/GitHub/LibTorch20/out/build/x64-release/Release/TestTorch20.dll -installedDir D:/Documents/GitHub/vcpkg/installed/x64-windows/bin -OutVariable out
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/asmjit.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/c10.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/c10_cuda.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/caffe2_nvrtc.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cublas64_11.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cublasLt64_11.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cudart64_110.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cudnn64_8.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cudnn_adv_infer64_8.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cudnn_adv_train64_8.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cudnn_cnn_infer64_8.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cudnn_cnn_train64_8.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cudnn_ops_infer64_8.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cudnn_ops_train64_8.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cufft64_10.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cufftw64_10.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cupti64_2022.3.0.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/curand64_10.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cusolver64_11.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cusolverMg64_11.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cusparse64_11.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/fbgemm.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/fbjni.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/libiomp5md.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/libiompstubs5md.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/nvToolsExt64_1.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/nvfuser_codegen.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/nvrtc-builtins64_118.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/nvrtc64_112_0.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/pytorch_jni.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/torch.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/torch_cpu.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/torch_cuda.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/torch_global_deps.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/uv.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/zlibwapi.dll D:/Documents/GitHub/LibTorch20/out/build/x64-release/Release
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\lib\x64\nvrtc.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\lib\x64\cudart.lib;C:\Program Files\NVIDIA Corporation\NvToolsExt\lib\x64\nvToolsExt64_1.lib;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\lib\c10.lib;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\lib\kineto.lib;C:\Program Files\NVIDIA Corporation\NvToolsExt\\lib\x64\nvToolsExt64_1.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\lib\x64\cudart_static.lib;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\lib\caffe2_nvrtc.lib;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\lib\c10_cuda.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\lib\x64\cuda.lib;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\lib\torch.lib;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\lib\torch_cuda.lib;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\lib\torch_cpu.lib;-INCLUDE:?warp_size@cuda@at@@YAHXZ;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\lib\c10_cuda.lib;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\lib\c10.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\lib\x64\cudart.lib;C:\Program Files\NVIDIA Corporation\NvToolsExt\lib\x64\nvToolsExt64_1.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\lib\x64\cufft.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\lib\x64\curand.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\lib\x64\cublas.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\lib\x64\cublasLt.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.8/lib/x64;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.8/lib/x64/$(Configuration);/lib;/lib/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Documents/GitHub/LibTorch20/out/build/x64-release/Release/TestTorch20.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Documents/GitHub/LibTorch20/out/build/x64-release/Release/TestTorch20.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
    <CudaLink>
      <AdditionalOptions>-forward-unknown-to-host-compiler -Wno-deprecated-gpu-targets </AdditionalOptions>
      <PerformDeviceLink>false</PerformDeviceLink>
    </CudaLink>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalOptions>%(AdditionalOptions) /external:I "C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.8/include" /external:I "D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/include" /external:I "D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/include/torch/csrc/api/include" /external:I "C:/Program Files/NVIDIA Corporation/NvToolsExt//include" /bigobj</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <DebugInformationFormat>OldStyle</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <ExternalWarningLevel>TurnOffAllWarnings</ExternalWarningLevel>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;USE_DISTRIBUTED;USE_C10D_GLOO;CMAKE_INTDIR="Debug";TestTorch20_EXPORTS</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_DEBUG;_WINDOWS;USE_DISTRIBUTED;USE_C10D_GLOO;CMAKE_INTDIR=\"Debug\";TestTorch20_EXPORTS</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\include;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\include;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\include\torch\csrc\api\include;C:\Program Files\NVIDIA Corporation\NvToolsExt\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\include;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\include;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\include\torch\csrc\api\include;C:\Program Files\NVIDIA Corporation\NvToolsExt\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message>	</Message>
      <Command>setlocal
C:\Users\TurboTage\AppData\Local\Microsoft\WindowsApps\pwsh.exe -noprofile -executionpolicy Bypass -file D:/Documents/GitHub/vcpkg/scripts/buildsystems/msbuild/applocal.ps1 -targetBinary D:/Documents/GitHub/LibTorch20/out/build/x64-release/Debug/TestTorch20.dll -installedDir D:/Documents/GitHub/vcpkg/installed/x64-windows/debug/bin -OutVariable out
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/asmjit.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/c10.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/c10_cuda.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/caffe2_nvrtc.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cublas64_11.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cublasLt64_11.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cudart64_110.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cudnn64_8.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cudnn_adv_infer64_8.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cudnn_adv_train64_8.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cudnn_cnn_infer64_8.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cudnn_cnn_train64_8.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cudnn_ops_infer64_8.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cudnn_ops_train64_8.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cufft64_10.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cufftw64_10.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cupti64_2022.3.0.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/curand64_10.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cusolver64_11.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cusolverMg64_11.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/cusparse64_11.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/fbgemm.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/fbjni.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/libiomp5md.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/libiompstubs5md.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/nvToolsExt64_1.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/nvfuser_codegen.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/nvrtc-builtins64_118.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/nvrtc64_112_0.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/pytorch_jni.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/torch.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/torch_cpu.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/torch_cuda.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/torch_global_deps.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/uv.dll D:/Packages/LibTorch/v2_0_cuda_11_8/nightly_release/lib/zlibwapi.dll D:/Documents/GitHub/LibTorch20/out/build/x64-release/Debug
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\lib\x64\nvrtc.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\lib\x64\cudart.lib;C:\Program Files\NVIDIA Corporation\NvToolsExt\lib\x64\nvToolsExt64_1.lib;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\lib\c10.lib;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\lib\kineto.lib;C:\Program Files\NVIDIA Corporation\NvToolsExt\\lib\x64\nvToolsExt64_1.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\lib\x64\cudart_static.lib;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\lib\caffe2_nvrtc.lib;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\lib\c10_cuda.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\lib\x64\cuda.lib;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\lib\torch.lib;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\lib\torch_cuda.lib;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\lib\torch_cpu.lib;-INCLUDE:?warp_size@cuda@at@@YAHXZ;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\lib\c10_cuda.lib;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\lib\c10.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\lib\x64\cudart.lib;C:\Program Files\NVIDIA Corporation\NvToolsExt\lib\x64\nvToolsExt64_1.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\lib\x64\cufft.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\lib\x64\curand.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\lib\x64\cublas.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\lib\x64\cublasLt.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.8/lib/x64;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.8/lib/x64/$(Configuration);/lib;/lib/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Documents/GitHub/LibTorch20/out/build/x64-release/Debug/TestTorch20.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Documents/GitHub/LibTorch20/out/build/x64-release/Debug/TestTorch20.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
    <CudaLink>
      <AdditionalOptions>-forward-unknown-to-host-compiler -Wno-deprecated-gpu-targets </AdditionalOptions>
      <PerformDeviceLink>false</PerformDeviceLink>
    </CudaLink>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\Documents\GitHub\LibTorch20\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule D:/Documents/GitHub/LibTorch20/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -SD:/Documents/GitHub/LibTorch20 -BD:/Documents/GitHub/LibTorch20/out/build/x64-release --check-stamp-file D:/Documents/GitHub/LibTorch20/out/build/x64-release/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCUDAInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCXXInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeDependentOption.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeGenericSystem.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeLanguageInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeRCInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\MSVC-C.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\MSVC.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\NVIDIA-CUDA.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\FindCUDAToolkit.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\FindPackageMessage.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-NVIDIA-CUDA.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\WindowsPaths.cmake;D:\Documents\GitHub\LibTorch20\out\build\x64-release\CMakeFiles\3.25.1-msvc1\CMakeCCompiler.cmake;D:\Documents\GitHub\LibTorch20\out\build\x64-release\CMakeFiles\3.25.1-msvc1\CMakeCUDACompiler.cmake;D:\Documents\GitHub\LibTorch20\out\build\x64-release\CMakeFiles\3.25.1-msvc1\CMakeCXXCompiler.cmake;D:\Documents\GitHub\LibTorch20\out\build\x64-release\CMakeFiles\3.25.1-msvc1\CMakeRCCompiler.cmake;D:\Documents\GitHub\LibTorch20\out\build\x64-release\CMakeFiles\3.25.1-msvc1\CMakeSystem.cmake;D:\Documents\GitHub\LibTorch20\out\build\x64-release\detect_cuda_compute_capabilities.cu;D:\Documents\GitHub\LibTorch20\out\build\x64-release\detect_cuda_version.cc;D:\Documents\GitHub\vcpkg\scripts\buildsystems\vcpkg.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Caffe2\Caffe2Config.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Caffe2\Caffe2Targets-release.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Caffe2\Caffe2Targets.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Caffe2\FindCUDAToolkit.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Caffe2\Modules_CUDA_fix\FindCUDA.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Caffe2\Modules_CUDA_fix\FindCUDNN.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Caffe2\Modules_CUDA_fix\upstream\CMakeInitializeConfigs.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Caffe2\Modules_CUDA_fix\upstream\FindCUDA.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Caffe2\Modules_CUDA_fix\upstream\FindCUDA\select_compute_arch.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Caffe2\Modules_CUDA_fix\upstream\FindPackageHandleStandardArgs.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Caffe2\Modules_CUDA_fix\upstream\FindPackageMessage.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Caffe2\public\cuda.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Caffe2\public\mkl.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Caffe2\public\mkldnn.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Caffe2\public\utils.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Torch\TorchConfig.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Torch\TorchConfigVersion.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\Documents\GitHub\LibTorch20\out\build\x64-release\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule D:/Documents/GitHub/LibTorch20/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -SD:/Documents/GitHub/LibTorch20 -BD:/Documents/GitHub/LibTorch20/out/build/x64-release --check-stamp-file D:/Documents/GitHub/LibTorch20/out/build/x64-release/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCUDAInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCXXInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeDependentOption.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeGenericSystem.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeLanguageInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeRCInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\MSVC-C.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\MSVC.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Compiler\NVIDIA-CUDA.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\FindCUDAToolkit.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\FindPackageMessage.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows-NVIDIA-CUDA.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\Windows.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\Platform\WindowsPaths.cmake;D:\Documents\GitHub\LibTorch20\out\build\x64-release\CMakeFiles\3.25.1-msvc1\CMakeCCompiler.cmake;D:\Documents\GitHub\LibTorch20\out\build\x64-release\CMakeFiles\3.25.1-msvc1\CMakeCUDACompiler.cmake;D:\Documents\GitHub\LibTorch20\out\build\x64-release\CMakeFiles\3.25.1-msvc1\CMakeCXXCompiler.cmake;D:\Documents\GitHub\LibTorch20\out\build\x64-release\CMakeFiles\3.25.1-msvc1\CMakeRCCompiler.cmake;D:\Documents\GitHub\LibTorch20\out\build\x64-release\CMakeFiles\3.25.1-msvc1\CMakeSystem.cmake;D:\Documents\GitHub\LibTorch20\out\build\x64-release\detect_cuda_compute_capabilities.cu;D:\Documents\GitHub\LibTorch20\out\build\x64-release\detect_cuda_version.cc;D:\Documents\GitHub\vcpkg\scripts\buildsystems\vcpkg.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Caffe2\Caffe2Config.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Caffe2\Caffe2Targets-release.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Caffe2\Caffe2Targets.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Caffe2\FindCUDAToolkit.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Caffe2\Modules_CUDA_fix\FindCUDA.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Caffe2\Modules_CUDA_fix\FindCUDNN.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Caffe2\Modules_CUDA_fix\upstream\CMakeInitializeConfigs.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Caffe2\Modules_CUDA_fix\upstream\FindCUDA.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Caffe2\Modules_CUDA_fix\upstream\FindCUDA\select_compute_arch.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Caffe2\Modules_CUDA_fix\upstream\FindPackageHandleStandardArgs.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Caffe2\Modules_CUDA_fix\upstream\FindPackageMessage.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Caffe2\public\cuda.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Caffe2\public\mkl.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Caffe2\public\mkldnn.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Caffe2\public\utils.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Torch\TorchConfig.cmake;D:\Packages\LibTorch\v2_0_cuda_11_8\nightly_release\share\cmake\Torch\TorchConfigVersion.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\Documents\GitHub\LibTorch20\out\build\x64-release\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="D:\Documents\GitHub\LibTorch20\src\main.ixx" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:\Documents\GitHub\LibTorch20\out\build\x64-release\ZERO_CHECK.vcxproj">
      <Project>{4BEB3543-CE69-3A8F-A43C-7DB78E94D4E4}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 12.1.targets" />
  </ImportGroup>
</Project>